(window.webpackJsonp=window.webpackJsonp||[]).push([[44],{216:function(t,s,a){"use strict";a.r(s);var o=a(6),e=Object(o.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h3",{attrs:{id:"hooks简介"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#hooks简介"}},[t._v("#")]),t._v(" Hooks简介")]),t._v(" "),a("h4",{attrs:{id:"背景"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#背景"}},[t._v("#")]),t._v(" 背景")]),t._v(" "),a("ul",[a("li",[t._v("React一直提倡使用函数组件，因为类组件往往存在很多缺点，比如编写麻烦等。但是组件需要使用state以及其他功能时，就只能使用类组件，因为函数组件没有实例，没有生命周期函数，只有类组件才有。")]),t._v(" "),a("li",[t._v("React Hooks是React16.8的新特性，它可以让我们在不编写类组件class的情况下，使用state以及其他React的特性")])]),t._v(" "),a("hr"),t._v(" "),a("h4",{attrs:{id:"定义"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#定义"}},[t._v("#")]),t._v(" 定义")]),t._v(" "),a("ul",[a("li",[t._v("React Hooks的意思是，组件尽量写成纯函数，如果需要外部的功能和副作用，就用钩子把外部代码钩进来。")]),t._v(" "),a("li",[t._v("Hooks就是一些可以让你在函数组件中“钩入”React state以及生命周期特性的函数。")])]),t._v(" "),a("hr"),t._v(" "),a("h4",{attrs:{id:"为什么要使用hooks"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#为什么要使用hooks"}},[t._v("#")]),t._v(" 为什么要使用Hooks")]),t._v(" "),a("ul",[a("li",[t._v("组件之间状态复用逻辑很困难")]),t._v(" "),a("li",[t._v("类组件的简单组件编写麻烦，复杂组件更加难以理解。比如，我们常常在componentDidMount和componentDidUpdate中获取数据，在同一个componentDidMount中可能会包含很多其他的逻辑，完全不相关的代码在同一个生命周期方法中被组合在一起，很容易产生Bug，并且导致逻辑看起来不一致")]),t._v(" "),a("li",[t._v("难以理解的class，我们必须了解JS的this工作方式，以及多种this的绑定情况。class不能很好的压缩，热重载的时候也会出现不稳定的情况")])]),t._v(" "),a("hr"),t._v(" "),a("h4",{attrs:{id:"hooks的优势"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#hooks的优势"}},[t._v("#")]),t._v(" Hooks的优势")]),t._v(" "),a("ul",[a("li",[t._v("能优化上面的三个缺点")]),t._v(" "),a("li",[t._v("能在无需修改组件结构的情况下复用状态逻辑（自定义Hooks）")]),t._v(" "),a("li",[t._v("能将组件中相关关联的部分拆分成更小的函数")]),t._v(" "),a("li",[t._v("副作用分离：副作用指的是那些没有发生在数据到视图层转换过程中的逻辑，比如ajax请求，访问原生dom元素，本地持久化缓存，绑定/解绑事件，添加/订阅，设置定时器，记录日志等等。以往这些副作用都是写在类组件的生命周期函数中的，而useEffect会在全部渲染完毕后执行")])]),t._v(" "),a("hr"),t._v(" "),a("h4",{attrs:{id:"hooks使用规则"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#hooks使用规则"}},[t._v("#")]),t._v(" Hooks使用规则")]),t._v(" "),a("ul",[a("li",[t._v("只能在函数外层调用Hooks，不要在循环、条件判断或者子函数中调用")]),t._v(" "),a("li",[t._v("只能在React组件中调用，不要在其他JavaScript函数中调用")])])])}),[],!1,null,null,null);s.default=e.exports}}]);