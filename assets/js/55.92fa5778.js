(window.webpackJsonp=window.webpackJsonp||[]).push([[55],{210:function(t,e,r){"use strict";r.r(e);var a=r(6),v=Object(a.a)({},(function(){var t=this,e=t.$createElement,r=t._self._c||e;return r("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[r("h3",{attrs:{id:"react生命周期"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#react生命周期"}},[t._v("#")]),t._v(" React生命周期")]),t._v(" "),r("p",[t._v("网上看到很多关于生命周期的文章，林林总总，不如自己总结一下。"),r("br"),t._v("\nReact的生命周期，分为三个阶段，挂载、更新、卸载。"),r("br"),t._v("\n组件第一次挂载走的是挂载阶段，之后走的都是更新阶段。")]),t._v(" "),r("hr"),t._v(" "),r("h4",{attrs:{id:"挂载阶段"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#挂载阶段"}},[t._v("#")]),t._v(" 挂载阶段")]),t._v(" "),r("p",[t._v("当组件实例被创建并且插入DOM时，其生命周期调用顺序如下：")]),t._v(" "),r("ul",[r("li",[r("a",{attrs:{href:"#1"}},[t._v("constructor()")])]),t._v(" "),r("li",[r("a",{attrs:{href:"#2"}},[t._v("static getDerivedStateFromProps(nextProps,prevState)")])]),t._v(" "),r("li",[r("a",{attrs:{href:"#3"}},[t._v("render()")])]),t._v(" "),r("li",[r("a",{attrs:{href:"#4"}},[t._v("componentDidMount()")])])]),t._v(" "),r("hr"),t._v(" "),r("h4",{attrs:{id:"更新阶段"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#更新阶段"}},[t._v("#")]),t._v(" 更新阶段")]),t._v(" "),r("p",[t._v("当组件的props或者state发生变化时会触发更新，组件更新的生命周期调用顺序如下：")]),t._v(" "),r("ul",[r("li",[r("a",{attrs:{href:"#2"}},[t._v("static getDerivedStateFromProps(nextProps,prevState)")])]),t._v(" "),r("li",[r("a",{attrs:{href:"#5"}},[t._v("shouldComponentUpdate()")])]),t._v(" "),r("li",[r("a",{attrs:{href:"#3"}},[t._v("render()")])]),t._v(" "),r("li",[r("a",{attrs:{href:"#6"}},[t._v("getSnapshotBeforeUpdate()")])]),t._v(" "),r("li",[r("a",{attrs:{href:"#7"}},[t._v("componentDidUpdate()")])])]),t._v(" "),r("hr"),t._v(" "),r("h4",{attrs:{id:"卸载阶段"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#卸载阶段"}},[t._v("#")]),t._v(" 卸载阶段")]),t._v(" "),r("p",[t._v("当组件从DOM中移除的时候会调用的阶段")]),t._v(" "),r("ul",[r("li",[r("a",{attrs:{href:"#8"}},[t._v("componentWillUnmount()")])])]),t._v(" "),r("hr"),t._v(" "),r("h4",{attrs:{id:"各个生命周期定义"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#各个生命周期定义"}},[t._v("#")]),t._v(" 各个生命周期定义")]),t._v(" "),r("p",[r("a",{attrs:{name:"1"}},[t._v("constructor()")])]),t._v(" "),r("p",[t._v("组件挂载之前，会调用它的构造函数。React中，构造函数仅仅用于：")]),t._v(" "),r("ul",[r("li",[t._v("给state初始化内部状态")]),t._v(" "),r("li",[t._v("给事件函数绑定this")])]),t._v(" "),r("hr"),t._v(" "),r("p",[r("a",{attrs:{name:"2"}},[t._v("static getDerivedStateFromProps(nextProps,prevState)")])]),t._v(" "),r("p",[t._v("将传入的props映射到state上面，是一个静态方法，父组件传入的newProps和当前组件prevState进行比较，如果需要更新state，则返回需要更新的state；如果不需要更新state，则返回null。")]),t._v(" "),r("p",[t._v("注意点：")]),t._v(" "),r("ul",[r("li",[t._v("会在调用render()方法之前调用，并在在初始挂载和后续更新时都会被调用（这个生命周期适合state完全取决于props）")]),t._v(" "),r("li",[t._v("不要在子组件里直接复制props到state上，而是去实现一个受控组件，在父组件里管理state，直接控制父组件的值（设计组件时，要确定这个组件是受控组件还是非受控组件）")]),t._v(" "),r("li",[t._v("尽量可以不用使用这个生命周期")])]),t._v(" "),r("p",[t._v("使用场景：")]),t._v(" "),r("ul",[r("li",[t._v("完全受控组件：无条件从props中更新state（这个场景中我们完全没必要使用这个生命周期，父组件直接控制子组件的props值就行了）")]),t._v(" "),r("li",[t._v("半受控组件：子从props中更新state获取到数据，子组件内部又需要触发一些方法对state进行修改，这时候就会发现数据并不会改变（解决方法是保存之前传入的props与现在的props作对比）")])]),t._v(" "),r("hr"),t._v(" "),r("p",[r("a",{attrs:{name:"3"}},[t._v("render()")])]),t._v(" "),r("p",[t._v("当render()被调用时，它会检查this.props和this.state的变化并返回React元素或其他元素")]),t._v(" "),r("hr"),t._v(" "),r("p",[r("a",{attrs:{name:"4"}},[t._v("componentDidMount()")])]),t._v(" "),r("p",[t._v("在render()方法之后执行，组件挂载后（插入DOM树中）立即调用。可以在这里调用网络请求，返回数据setState之后组件会重新渲染。")]),t._v(" "),r("p",[t._v("注意点：")]),t._v(" "),r("ul",[r("li",[t._v("这个方法只会执行一次，即初次render()执行之后立即执行。后续render()执行后会执行componentDidUpdate")])]),t._v(" "),r("hr"),t._v(" "),r("p",[r("a",{attrs:{name:"5"}},[t._v("shouldComponentUpdate()")])]),t._v(" "),r("p",[t._v("主要用于性能优化，部分更新。React中，setState之后state发生变化，组件会进入重新渲染的流程，在这里return false会阻止组件的重新渲染。")]),t._v(" "),r("p",[t._v("注意点：")]),t._v(" "),r("ul",[r("li",[t._v("不建议在shouldComponentUpdate中进行深层比较或者使用JSON.stringify()，这样非常影响效率并且损害新能")])]),t._v(" "),r("hr"),t._v(" "),r("p",[r("a",{attrs:{name:"6"}},[t._v("getSnapshotBeforeUpdate()")])]),t._v(" "),r("p",[t._v("在最终的render之前被调用，用来替代componentWillUpdate")]),t._v(" "),r("hr"),t._v(" "),r("p",[r("a",{attrs:{name:"7"}},[t._v("componentDidUpdate(prevProps,prevState)")])]),t._v(" "),r("p",[t._v("组件更新完毕后，react只会在第一次初始化成功会进入到componentDidMount，之后每次重新渲染后都会进入这个生命周期")]),t._v(" "),r("hr"),t._v(" "),r("p",[r("a",{attrs:{name:"7"}},[t._v("componentWillUnmount")])]),t._v(" "),r("p",[t._v("当组件从DOM中移除时会调用这个方法，会在组件卸载以及销毁之前直接调用，可在此方法中执行必要的清理操作。")]),t._v(" "),r("hr"),t._v(" "),r("h4",{attrs:{id:"弃用的生命周期"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#弃用的生命周期"}},[t._v("#")]),t._v(" 弃用的生命周期")]),t._v(" "),r("ul",[r("li",[t._v("componentWillMount")]),t._v(" "),r("li",[t._v("componentWillReceiveProps")]),t._v(" "),r("li",[t._v("componentWillUpdate")])]),t._v(" "),r("hr"),t._v(" "),r("h4",{attrs:{id:"参考链接"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#参考链接"}},[t._v("#")]),t._v(" 参考链接")]),t._v(" "),r("p",[r("a",{attrs:{href:"https://juejin.im/post/6844903760305602568",target:"_blank",rel:"noopener noreferrer"}},[t._v("使用场景解析"),r("OutboundLink")],1),r("br"),t._v(" "),r("a",{attrs:{href:"https://react.docschina.org/docs/react-component.html#static-getderivedstatefromprops",target:"_blank",rel:"noopener noreferrer"}},[t._v("官网"),r("OutboundLink")],1),r("br"),t._v(" "),r("a",{attrs:{href:"https://juejin.im/post/6844903679418433550",target:"_blank",rel:"noopener noreferrer"}},[t._v("为什么弃用这些生命周期"),r("OutboundLink")],1)])])}),[],!1,null,null,null);e.default=v.exports}}]);