(window.webpackJsonp=window.webpackJsonp||[]).push([[39],{196:function(t,e,r){"use strict";r.r(e);var a=r(6),s=Object(a.a)({},(function(){var t=this,e=t.$createElement,r=t._self._c||e;return r("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[r("h3",{attrs:{id:"为什么要用redux"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#为什么要用redux"}},[t._v("#")]),t._v(" 为什么要用redux")]),t._v(" "),r("p",[t._v("在React中，数据在组件中是单向流动的，数据可以通过props从一个方向父组件流向子组件，但是两个非父子组件之间通信就相对麻烦，redux的出现就是为了解决数据共享的问题，一个组件改变了store里的状态，其他组件就能自动感知")]),t._v(" "),r("hr"),t._v(" "),r("h3",{attrs:{id:"设计理念"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#设计理念"}},[t._v("#")]),t._v(" 设计理念")]),t._v(" "),r("ol",[r("li",[t._v("Redux是将整个应用状态存储到一个地方称为store")]),t._v(" "),r("li",[t._v("这个store里面保存了一棵状态树称为state tree")]),t._v(" "),r("li",[t._v("组件改变state的唯一方法就是通过调用store的dispatch方法，触发一个action，这个action被对应的reducer处理，于是state完成更新\n4.组件可以派发dispatch行为action给store，而不是直接通知其他组件\n5.其他组件可以通过订阅store中的状态刷新自己的视图")])]),t._v(" "),r("hr"),t._v(" "),r("h3",{attrs:{id:"流程图"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#流程图"}},[t._v("#")]),t._v(" 流程图")]),t._v(" "),r("p",[r("img",{attrs:{src:"https://raw.githubusercontent.com/superwtt/MyFileRepository/main/image/React/redux%E6%B5%81%E7%A8%8B.png",alt:""}})]),t._v(" "),r("p",[r("img",{attrs:{src:"https://raw.githubusercontent.com/superwtt/MyFileRepository/main/image/React/redux%E6%B5%81%E7%A8%8B%E6%89%8B%E7%BB%98.png",alt:""}})]),t._v(" "),r("hr"),t._v(" "),r("h3",{attrs:{id:"redux三大原则"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#redux三大原则"}},[t._v("#")]),t._v(" Redux三大原则")]),t._v(" "),r("ol",[r("li",[t._v("store是唯一数据源")]),t._v(" "),r("li",[t._v("状态是只读的，改变状态的唯一方法就是去触发一个action")]),t._v(" "),r("li",[t._v("reducer必须是纯函数，纯函数是指给固定输入就会有固定输出，而且不会有任何副作用")])]),t._v(" "),r("hr"),t._v(" "),r("h3",{attrs:{id:"redux概念解析"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#redux概念解析"}},[t._v("#")]),t._v(" Redux概念解析")]),t._v(" "),r("p",[t._v("1.store：保存数据的地方，你可以把它看成一个数据，整个应用只有一个store")]),t._v(" "),r("p",[t._v("2.state：state就是store里面存储的数据，store里面拥有多个state，Redux规定一个state对应一个view，只要state相同，view就相同")]),t._v(" "),r("p",[t._v("3.store.dispatch：它是view发出action的唯一方法")]),t._v(" "),r("p",[t._v("4.action：state的变化会导致view的变化，但是用户不能直接操作state，只能接触view触发action发出通知，修改state")]),t._v(" "),r("p",[t._v("5.reducer：用来描述action如何改变state，接收旧的state和action，返回新的state。store收到action以后，必须给出一个新的state，这样view才会发生变化，这种state的计算过程就叫做reducer")]),t._v(" "),r("hr"),t._v(" "),r("h3",{attrs:{id:"参考链接"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#参考链接"}},[t._v("#")]),t._v(" 参考链接")]),t._v(" "),r("p",[r("a",{attrs:{href:"https://zhuanlan.zhihu.com/p/50247513",target:"_blank",rel:"noopener noreferrer"}},[t._v("知乎"),r("OutboundLink")],1)])])}),[],!1,null,null,null);e.default=s.exports}}]);