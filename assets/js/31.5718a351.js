(window.webpackJsonp=window.webpackJsonp||[]).push([[31],{234:function(t,s,e){"use strict";e.r(s);var a=e(6),n=Object(a.a)({},(function(){var t=this,s=t.$createElement,e=t._self._c||s;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("h3",{attrs:{id:"归-阶段update时的completework工作"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#归-阶段update时的completework工作"}},[t._v("#")]),t._v(" “归”阶段update时的completeWork工作")]),t._v(" "),e("h3",{attrs:{id:"源码"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#源码"}},[t._v("#")]),t._v(" 源码")]),t._v(" "),e("p",[t._v("源码目录："),e("code",[t._v("react/packages/react-reconciler/src/ReactFiberCompleteWork.js")])]),t._v(" "),e("div",{staticClass:"language-javascript extra-class"},[e("pre",{pre:!0,attrs:{class:"language-javascript"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("current "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!==")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&&")]),t._v(" workInProgress"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("stateNode "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 该Fiber节点是否存在对应的DOM节点")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// update的情况 与beginWork阶段的updateHostComponent是不一样的")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("updateHostComponent")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n    current"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    workInProgress"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    type"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    newProps"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    rootContainerInstance"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// updateHostComponent中最重要的就是调用`prepareUpdate`这个方法")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// prepareUpdate最终会返回diffProperties")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// diffProperties遍历lastProps（本次更新开始之前的props）和nextProps（本次更新的props），对比props的新增、删除、更新")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 区分style、children、dangerouslyInnerHtml")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// react-dom/src/client/ReactDOMComponent.js")]),t._v("\n\n\n")])])]),e("p",[e("code",[t._v("updateHostComponent")]),t._v("作用是diff props，返回一个需要更新的属性名称组成的数据，被处理完的props会以数组形式[key1,valu1,key2,value2]赋值给"),e("code",[t._v("workInProgress.updateQueue")]),t._v("，最终交给"),e("code",[t._v("commitRoot")]),t._v("进入"),e("code",[t._v("commit阶段")])])])}),[],!1,null,null,null);s.default=n.exports}}]);